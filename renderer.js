const dishes = [
  // ü•ó –°–∞–ª–∞—Ç–∏
  {
    name: '–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä',
    price: 245,
    category: 'salads',
    image: 'img/caesar.jpg',
    description: '–ö–ª–∞—Å–∏—á–Ω–∏–π —Å–∞–ª–∞—Ç –∑ –∫—É—Ä–∫–æ—é, –ø–∞—Ä–º–µ–∑–∞–Ω–æ–º —ñ —Å–æ—É—Å–æ–º –¶–µ–∑–∞—Ä.',
    ingredients: '–ö—É—Ä–∫–∞, —Å–∞–ª–∞—Ç –†–æ–º–∞–Ω–æ, –ø–∞—Ä–º–µ–∑–∞–Ω, –∫—Ä—É—Ç–æ–Ω–∏, —Å–æ—É—Å –¶–µ–∑–∞—Ä'
  },
  {
    name: '–ì—Ä–µ—Ü—å–∫–∏–π —Å–∞–ª–∞—Ç',
    price: 120,
    category: 'salads',
    image: 'img/greek.jpg',
    description: '–°–≤—ñ–∂–∏–π —Å–∞–ª–∞—Ç –∑ –æ–≤–æ—á–∞–º–∏ —Ç–∞ —Å–∏—Ä–æ–º —Ñ–µ—Ç–∞.',
    ingredients: '–û–≥—ñ—Ä–æ–∫, –ø–æ–º—ñ–¥–æ—Ä, —Ñ–µ—Ç–∞, –æ–ª–∏–≤–∫–∏, —Ü–∏–±—É–ª—è, –æ–ª–∏–≤–∫–æ–≤–∞ –æ–ª—ñ—è'
  },
  {
    name: '–°–∞–ª–∞—Ç –ö–∞–ø—Ä–µ–∑–µ',
    price: 111,
    category: 'salads',
    image: 'img/caprese.jpg',
    description: '–õ–µ–≥–∫–∏–π —Å–∞–ª–∞—Ç –∑ –º–æ—Ü–∞—Ä–µ–ª–æ—é, —Ç–æ–º–∞—Ç–∞–º–∏ —Ç–∞ –±–∞–∑–∏–ª—ñ–∫–æ–º.',
    ingredients: '–ú–æ—Ü–∞—Ä–µ–ª–∞, –ø–æ–º—ñ–¥–æ—Ä–∏, –±–∞–∑–∏–ª—ñ–∫, –±–∞–ª—å–∑–∞–º—ñ–∫'
  },
  {
    name: '–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞',
    price: 201,
    category: 'main',
    image: 'img/Carbonara.jpg',
    description: '–Ü—Ç–∞–ª—ñ–π—Å—å–∫–∞ –ø–∞—Å—Ç–∞ –∑ –±–µ–∫–æ–Ω–æ–º —Ç–∞ –≤–µ—Ä—à–∫–æ–≤–∏–º —Å–æ—É—Å–æ–º.',
    ingredients: '–°–ø–∞–≥–µ—Ç—Ç—ñ, –±–µ–∫–æ–Ω, —è–π—Ü–µ, –ø–∞—Ä–º–µ–∑–∞–Ω, –≤–µ—Ä—à–∫–∏'
  },
  {
    name: '–ë–æ—Ä—â —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π',
    price: 120,
    category: 'main',
    image: 'img/borscht.jpg',
    description: '–¢—Ä–∞–¥–∏—Ü—ñ–π–Ω–∏–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –±–æ—Ä—â –∑—ñ —Å–º–µ—Ç–∞–Ω–æ—é.',
    ingredients: '–ë—É—Ä—è–∫, –∫–∞–ø—É—Å—Ç–∞, –º–æ—Ä–∫–≤–∞, –∫–∞—Ä—Ç–æ–ø–ª—è, –º‚Äô—è—Å–æ, —Å–º–µ—Ç–∞–Ω–∞'
  },
  {
    name: '–†–∞–º–µ–Ω –∑ –∫—É—Ä–∫–æ—é',
    price: 175,
    category: 'main',
    image: 'img/ramen.jpg',
    description: '–Ø–ø–æ–Ω—Å—å–∫–∏–π —Å—É–ø –∑ –ª–æ–∫—à–∏–Ω–æ—é —Ç–∞ –∫—É—Ä–∫–æ—é.',
    ingredients: '–ë—É–ª—å–π–æ–Ω, –ª–æ–∫—à–∏–Ω–∞, —è–π—Ü–µ, –∫—É—Ä–∫–∞, –≥—Ä–∏–±–∏'
  },
  {
    name: '–°—Ç–µ–π–∫ –∑ —è–ª–æ–≤–∏—á–∏–Ω–∏',
    price: 210,
    category: 'meat',
    image: 'img/steak.jpg',
    description: '–°–æ–∫–æ–≤–∏—Ç–∏–π —Å—Ç–µ–π–∫ –∑ —Ç—Ä–∞–≤–∞–º–∏.',
    ingredients: '–Ø–ª–æ–≤–∏—á–∏–Ω–∞, —Ä–æ–∑–º–∞—Ä–∏–Ω, —á–∞—Å–Ω–∏–∫, —Å–ø–µ—Ü—ñ—ó'
  },
  {
    name: '–ö—É—Ä–∫–∞ —Ç–µ—Ä—ñ—è–∫—ñ',
    price: 199,
    category: 'meat',
    image: 'img/teriyaki.jpg',
    description: '–ö—É—Ä–∫–∞ –≤ —Å–æ–ª–æ–¥–∫–æ–º—É —Å–æ—É—Å—ñ —Ç–µ—Ä—ñ—è–∫—ñ.',
    ingredients: '–ö—É—Ä–∫–∞, —Å–æ—î–≤–∏–π —Å–æ—É—Å, —ñ–º–±–∏—Ä, –º–µ–¥, –∫—É–Ω–∂—É—Ç'
  },
  {
    name: '–†–æ–ª –§—ñ–ª–∞–¥–µ–ª—å—Ñ—ñ—è',
    price: 211,
    category: 'japan',
    image: 'img/philadelphia.jpg',
    description: '–ö–ª–∞—Å–∏—á–Ω–∏–π —Ä–æ–ª –∑ –ª–æ—Å–æ—Å–µ–º —Ç–∞ —Å–∏—Ä–æ–º —Ñ—ñ–ª–∞–¥–µ–ª—å—Ñ—ñ—è.',
    ingredients: '–õ–æ—Å–æ—Å—å, —Å–∏—Ä —Ñ—ñ–ª–∞–¥–µ–ª—å—Ñ—ñ—è, –æ–≥—ñ—Ä–æ–∫, —Ä–∏—Å, –Ω–æ—Ä—ñ'
  },
  {
    name: '–†–æ–ª –£–Ω–∞–≥—ñ',
    price: 255,
    category: 'japan',
    image: 'img/unagi.jpg',
    description: '–†–æ–ª –∑ –≤—É–≥—Ä–æ–º —Ç–∞ —Å–æ—É—Å–æ–º —É–Ω–∞–≥—ñ.',
    ingredients: '–í—É–≥–æ—Ä, –∞–≤–æ–∫–∞–¥–æ, —Ä–∏—Å, –Ω–æ—Ä—ñ, –∫—É–Ω–∂—É—Ç'
  },
  {
    name: '–ë—É—Ä–≥–µ—Ä BBQ',
    price: 150,
    category: 'street',
    image: 'img/burger.jpg',
    description: '–°–æ–∫–æ–≤–∏—Ç–∏–π –±—É—Ä–≥–µ—Ä –∑ —Å–æ—É—Å–æ–º BBQ.',
    ingredients: '–ë—É–ª–∫–∞, —è–ª–æ–≤–∏—á–∏–Ω–∞, —Å–∏—Ä, —Å–∞–ª–∞—Ç, BBQ —Å–æ—É—Å'
  },
  {
    name: '–•–æ—Ç-–¥–æ–≥ –∫–ª–∞—Å–∏—á–Ω–∏–π',
    price: 90,
    category: 'street',
    image: 'img/hotdog.jpg',
    class: 'hotdog-fix',
    description: '–°–º–∞—á–Ω–∞ —Å–æ—Å–∏—Å–∫–∞ –≤ –±—É–ª—Ü—ñ –∑ —Å–æ—É—Å–∞–º–∏.',
    ingredients: '–ë—É–ª–∫–∞, —Å–æ—Å–∏—Å–∫–∞, –∫–µ—Ç—á—É–ø, –≥—ñ—Ä—á–∏—Ü—è'
  },
  {
    name: '–ö–æ—Ä–Ω-–î–æ–≥',
    price: 94,
    category: 'street',
    image: 'img/CornDog.jpg',
    description: '–ö—É–∫—É—Ä—É–¥–∑—è–Ω–∏–π —Ö–æ—Ç-–¥–æ–≥ –Ω–∞ –ø–∞–ª–∏—á—Ü—ñ.',
    ingredients: '–°–æ—Å–∏—Å–∫–∞, –∫—É–∫—É—Ä—É–¥–∑—è–Ω–µ —Ç—ñ—Å—Ç–æ, –æ–ª—ñ—è'
  },
  {
    name: '–†–æ–ª –î—Ä–∞–∫–æ–Ω',
    price: 435,
    category: 'japan',
    image: 'img/RolDragon.jpg',
    description: '–§—ñ—Ä–º–æ–≤–∏–π —Ä–æ–ª –∑ –ª–æ—Å–æ—Å–µ–º, –∞–≤–æ–∫–∞–¥–æ —Ç–∞ —Ö—Ä—É—Å—Ç–∫–∏–º –∫—É–Ω–∂—É—Ç–æ–º.',
    ingredients: '–õ–æ—Å–æ—Å—å, –∞–≤–æ–∫–∞–¥–æ, –∫—Ä–∞–±, —ñ–∫—Ä–∞, —Å–∏—Ä, –∫—É–Ω–∂—É—Ç'
  },
  
  {
    name: '–†–æ–ª –°–∞–º—É—Ä–∞–π',
    price: 399,
    category: 'japan',
    image: 'img/RolSamurai.jpg',
    description: '–ü—ñ–∫–∞–Ω—Ç–Ω–∏–π —Ä–æ–ª —ñ–∑ —Ç—É–Ω—Ü–µ–º —Ç–∞ —Å–æ—É—Å–æ–º —Ç–µ—Ä—ñ—è–∫—ñ.',
    ingredients: '–¢—É–Ω–µ—Ü—å, –æ–≥—ñ—Ä–æ–∫, –º–∞–Ω–≥–æ, –º—ñ–∫—Ä–æ–∑–µ–ª–µ–Ω—å, —Å–æ—É—Å —Ç–µ—Ä—ñ—è–∫—ñ'
  },
  
  {
    name: '–†–æ–ª –Ü–º–ø–µ—Ä–∞—Ç–æ—Ä',
    price: 350,
    category: 'japan',
    image: 'img/RolImperior.jpg',
    description: '–†–æ–ª –ø—Ä–µ–º—ñ—É–º-–∫–ª–∞—Å—É –∑ –ª–æ—Å–æ—Å–µ–º —Ç–∞ —ñ–∫—Ä–æ—é.',
    ingredients: '–õ–æ—Å–æ—Å—å, –∞–≤–æ–∫–∞–¥–æ, —ñ–∫—Ä–∞, —Å–∏—Ä, —Ä–∏—Å'
  },
  
  {
    name: '–°–∏—Ä–Ω–∞ –ë–æ–º–±–∞',
    price: 277,
    category: 'street',
    image: 'img/cheeseBomb.jpg',
    description: '–ú–ª–∏–Ω—Ü—ñ –∑ –Ω—ñ–∂–Ω–∏–º —Ä–æ–∑—Ç–æ–ø–ª–µ–Ω–∏–º —Å–∏—Ä–æ–º –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ.',
    ingredients: '–ú–ª–∏–Ω—Ü—ñ, —Ç–≤–µ—Ä–¥–∏–π —Å–∏—Ä, –∑–µ–ª–µ–Ω–∞ —Ü–∏–±—É–ª—è'
  },
  
  {
    name: '–¢–∞–∫–æ –∑ —è–ª–æ–≤–∏—á–∏–Ω–æ—é',
    price: 200,
    category: 'street',
    image: 'img/Taco.jpg',
    description: '–ú–µ–∫—Å–∏–∫–∞–Ω—Å—å–∫–µ —Ç–∞–∫–æ –∑ –ø—Ä—è–Ω–æ—é —è–ª–æ–≤–∏—á–∏–Ω–æ—é —Ç–∞ –æ–≤–æ—á–∞–º–∏.',
    ingredients: '–¢–æ—Ä—Ç–∏–ª—å—è, —Ñ–∞—Ä—à, –ø–æ–º—ñ–¥–æ—Ä–∏, —Ü–∏–±—É–ª—è, –∑–µ–ª–µ–Ω—å'
  },
  
  {
    name: '–ú–æ—Ö—ñ—Ç–æ',
    price: 55,
    category: 'drinks',
    image: 'img/Mohito.jpg',
    description: '–û—Ö–æ–ª–æ–¥–∂–µ–Ω–∏–π –Ω–∞–ø—ñ–π –∑ –ª–∞–π–º–æ–º —ñ –º\'—è—Ç–æ—é.',
    ingredients: '–õ–∞–π–º, –º\'—è—Ç–∞, –≥–∞–∑–æ–≤–∞–Ω–∞ –≤–æ–¥–∞, —Ü—É–∫–æ—Ä, –ª—ñ–¥'
  },
  
  {
    name: '–ü–∏–≤–æ —Å–≤—ñ—Ç–ª–µ',
    price: 60,
    category: 'drinks',
    image: 'img/bear.jpg',
    description: '–û—Ö–æ–ª–æ–¥–∂–µ–Ω–µ —Ä–æ–∑–ª–∏–≤–Ω–µ –ø–∏–≤–æ –∑ –ø—ñ–Ω–∫–æ—é.',
    ingredients: '–í–æ–¥–∞, —è—á–º—ñ–Ω—å, —Ö–º—ñ–ª—å'
  },
  
  {
    name: '–ü–∞–Ω–Ω–∞ –ö–æ—Ç—Ç–∞',
    price: 125,
    category: 'desserts',
    image: 'img/PannaKota.jpg',
    description: '–ù—ñ–∂–Ω–∏–π —ñ—Ç–∞–ª—ñ–π—Å—å–∫–∏–π –¥–µ—Å–µ—Ä—Ç –∑ —è–≥—ñ–¥–Ω–∏–º —Å–æ—É—Å–æ–º.',
    ingredients: '–í–µ—Ä—à–∫–∏, –∂–µ–ª–∞—Ç–∏–Ω, –≤–∞–Ω—ñ–ª—å, –ø–æ–ª—É–Ω–∏—Ü—è, –º–∞–ª–∏–Ω–∞'
  },
  
  {
    name: '–®–æ–∫–æ–ª–∞–¥–Ω–∏–π —Ñ–æ–Ω–¥–∞–Ω',
    price: 143,
    category: 'desserts',
    image: 'img/ChokolateFondan.jpg',
    description: '–¢–µ–ø–ª–∏–π —à–æ–∫–æ–ª–∞–¥–Ω–∏–π –¥–µ—Å–µ—Ä—Ç –∑ —Ä—ñ–¥–∫–æ—é –Ω–∞—á–∏–Ω–∫–æ—é —Ç–∞ –º–æ—Ä–æ–∑–∏–≤–æ–º.',
    ingredients: '–®–æ–∫–æ–ª–∞–¥, –±–æ—Ä–æ—à–Ω–æ, —è–π—Ü—è, —Ü—É–∫–æ—Ä, –º–æ—Ä–æ–∑–∏–≤–æ'
  },
  
  {
    name: '–ö–µ–±–∞–± –Ω–∞ —à–ø–∞–∂—Ü—ñ',
    price: 220,
    category: 'meat',
    image: 'img/Kebab.jpg',
    description: '–°–æ–∫–æ–≤–∏—Ç–∏–π –∫–µ–±–∞–± –∑ –∞—Ä–æ–º–∞—Ç–æ–º –≥—Ä–∏–ª—è.',
    ingredients: '–Ø–ª–æ–≤–∏—á–∏–Ω–∞, —Å–ø–µ—Ü—ñ—ó, —á–∞—Å–Ω–∏–∫, –¥–µ—Ä–µ–≤\'—è–Ω—ñ —à–ø–∞–∂–∫–∏'
  },
  
  {
    name: '–õ–∞–∑–∞–Ω—å—è –±–æ–ª–æ–Ω—å—î–∑–µ',
    price: 164,
    category: 'main',
    image: 'img/LazaniaBolon.jpg',
    description: '–ö–ª–∞—Å–∏—á–Ω–∞ —ñ—Ç–∞–ª—ñ–π—Å—å–∫–∞ –ª–∞–∑–∞–Ω—å—è –∑ –º\'—è—Å–Ω–∏–º —Å–æ—É—Å–æ–º.',
    ingredients: '–õ–∏—Å—Ç–∏ –ª–∞–∑–∞–Ω—å—ó, —Ñ–∞—Ä—à, —Ç–æ–º–∞—Ç–∏, –±–µ—à–∞–º–µ–ª—å, —Å–∏—Ä'
  },
  
  {
    name: '–°–∞–ª–∞—Ç –∑ –∞–≤–æ–∫–∞–¥–æ',
    price: 167,
    category: 'salads',
    image: 'img/SalatAvokado.png',
    description: '–õ–µ–≥–∫–∏–π —Å–∞–ª–∞—Ç –∑ –∞–≤–æ–∫–∞–¥–æ —Ç–∞ —Å–æ—î–≤–∏–º —Å–æ—É—Å–æ–º.',
    ingredients: '–ê–≤–æ–∫–∞–¥–æ, –±—Ä–æ–∫–æ–ª—ñ, –æ–≥—ñ—Ä–æ–∫, —Å–∞–ª–∞—Ç, –∫—É–Ω–∂—É—Ç, —Å–æ—É—Å'
  },
  
  {
    name: '–°–∞–ª–∞—Ç –∑ –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏',
    price: 179,
    category: 'salads',
    image: 'img/Salatkrevetki.jpg',
    description: '–°–∞–ª–∞—Ç –∑ –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏, –∞–≤–æ–∫–∞–¥–æ —Ç–∞ —è–π—Ü–µ–º.',
    ingredients: '–ö—Ä–µ–≤–µ—Ç–∫–∏, –∞–≤–æ–∫–∞–¥–æ, —è–π—Ü–µ, –æ–≤–æ—á—ñ, –ª–∏–º–æ–Ω'
  },
  
  {
    name: 'BBQ —Å–≤–∏–Ω–∏–Ω–∞',
    price: 245,
    category: 'meat',
    image: 'img/BBqsvinina.jpg',
    description: '–†–µ–±–µ—Ä—Ü—è –ø—ñ–¥ —Å–æ–ª–æ–¥–∫–∏–º —Å–æ—É—Å–æ–º BBQ.',
    ingredients: '–°–≤–∏–Ω–∏–Ω–∞, BBQ —Å–æ—É—Å, —Å–ø–µ—Ü—ñ—ó'
  },
  
  {
    name: '–ö–æ—Ç–ª–µ—Ç–∞ –ø–æ-–∫–∏—ó–≤—Å—å–∫–∏',
    price: 115,
    category: 'meat',
    image: 'img/KotletaKiev.jpg',
    description: '–°–º–∞–∂–µ–Ω–∞ –∫—É—Ä—è—á–∞ –∫–æ—Ç–ª–µ—Ç–∞ –∑ –º–∞—Å–ª–æ–º —ñ –∑–µ–ª–µ–Ω–Ω—é.',
    ingredients: '–ö—É—Ä–∫–∞, –≤–µ—Ä—à–∫–æ–≤–µ –º–∞—Å–ª–æ, –∑–µ–ª–µ–Ω—å, –ø–∞–Ω—ñ—Ä—É–≤–∞–Ω–Ω—è'
  },
  
  {
    name: '–ü–ª–æ–≤ –∑ –∫—É—Ä–∫–æ—é',
    price: 200,
    category: 'main',
    image: 'img/PLOV.png',
    description: '–ê—Ä–æ–º–∞—Ç–Ω–∏–π –ø–ª–æ–≤ –∑—ñ —Å–ø–µ—Ü—ñ—è–º–∏ —Ç–∞ —à–º–∞—Ç–æ—á–∫–∞–º–∏ –∫—É—Ä–∫–∏.',
    ingredients: '–†–∏—Å, –∫—É—Ä–∫–∞, –º–æ—Ä–∫–≤–∞, —Å–ø–µ—Ü—ñ—ó, —Ü–∏–±—É–ª—è'
  },
  {
    name: '–£–∑–≤–∞—Ä –¥–æ–º–∞—à–Ω—ñ–π',
    price: 40,
    category: 'drinks',
    image: 'img/uzvar.jpg',
    class: 'uzvar-fix',
    description: '–°–æ–ª–æ–¥–∫–∏–π –Ω–∞–ø—ñ–π –∑ —Å—É—Ö–æ—Ñ—Ä—É–∫—Ç—ñ–≤.',
    ingredients: '–°—É—Ö–æ—Ñ—Ä—É–∫—Ç–∏, –≤–æ–¥–∞, –º–µ–¥'
  },
  {
    name: '–ú–∞—Ç—á–∞ –ª–∞—Ç—Ç–µ',
    price: 60,
    category: 'drinks',
    image: 'img/matcha.jpg',
    description: '–ó–µ–ª–µ–Ω–∏–π —á–∞–π –∑ –º–æ–ª–æ–∫–æ–º.',
    ingredients: '–ú–∞—Ç—á–∞, –º–æ–ª–æ–∫–æ, –≤–æ–¥–∞, –º–µ–¥'
  },
  {
    name: '–ö–æ–ª–∞',
    price: 50,
    category: 'drinks',
    image: 'img/cola.jpg',
    description: '–û—Ö–æ–ª–æ–¥–∂–µ–Ω–∏–π –≥–∞–∑–æ–≤–∞–Ω–∏–π –Ω–∞–ø—ñ–π.',
    ingredients: '–ì–∞–∑–æ–≤–∞–Ω–∞ –≤–æ–¥–∞, –∞—Ä–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä'
  },
  {
    name: '–¢—ñ—Ä–∞–º—ñ—Å—É',
    price: 180,
    category: 'desserts',
    image: 'img/tiramisu.jpg',
    description: '–Ü—Ç–∞–ª—ñ–π—Å—å–∫–∏–π –¥–µ—Å–µ—Ä—Ç –∑ –∫–∞–≤–æ—é —Ç–∞ —Å–∏—Ä–æ–º –º–∞—Å–∫–∞—Ä–ø–æ–Ω–µ.',
    ingredients: '–ü–µ—á–∏–≤–æ —Å–∞–≤–æ—è—Ä–¥—ñ, –∫–∞–≤–∞, –º–∞—Å–∫–∞—Ä–ø–æ–Ω–µ, –∫–∞–∫–∞–æ'
  },
  {
    name: '–ß—ñ–∑–∫–µ–π–∫ –ù—å—é-–ô–æ—Ä–∫',
    price: 170,
    category: 'desserts',
    image: 'img/cheesecake.jpg',
    class: 'cheesecake-fix',
    description: '–ö–ª–∞—Å–∏—á–Ω–∏–π —á—ñ–∑–∫–µ–π–∫ –∑ –ø–æ–ª—É–Ω–∏—Ü–µ—é.',
    ingredients: '–°–∏—Ä, –ø–µ—á–∏–≤–æ, –≤–µ—Ä—à–∫–∏, –ø–æ–ª—É–Ω–∏—Ü—è'
  },
  

  
  {
    name: '–§—Ä–∞–Ω—Ü—É–∑—å–∫—ñ –º–∞–∫–∞—Ä—É–Ω–∏',
    price: 176,
    category: 'desserts',
    image: 'img/macarons.jpg',
    description: '–ö–æ–ª—å–æ—Ä–æ–≤—ñ –¥–µ—Å–µ—Ä—Ç–∏ –∑ –º–∏–≥–¥–∞–ª—å–Ω–∏–º –±–æ—Ä–æ—à–Ω–æ–º.',
    ingredients: '–ú–∏–≥–¥–∞–ª—å–Ω–µ –±–æ—Ä–æ—à–Ω–æ, –±—ñ–ª–æ–∫, —Ü—É–∫–æ—Ä, –Ω–∞—á–∏–Ω–∫–∞'
  }
];

let selectedIndexes = new Set();

const savedIndexes = localStorage.getItem('selectedIndexes');
if (savedIndexes) {
  try {
    selectedIndexes = new Set(JSON.parse(savedIndexes));
  } catch (e) {
    selectedIndexes = new Set();
  }
}

function renderDishes() {
  const categories = {
    salads: document.getElementById('salads-list'),
    main: document.getElementById('main-list'),
    meat: document.getElementById('meat-list'),
    japan: document.getElementById('japan-list'),
    street: document.getElementById('street-list'),
    drinks: document.getElementById('drinks-list'),
    desserts: document.getElementById('desserts-list')
  };

  Object.values(categories).forEach(ul => (ul.innerHTML = ''));

  dishes.forEach((dish, index) => {
    const imageClass = dish.class ? `class="${dish.class}"` : '';
    const li = document.createElement('li');
    li.classList.add('fade-in');

    li.innerHTML = `
      <label>
        <input type="checkbox" data-index="${index}" ${selectedIndexes.has(index) ? 'checked' : ''}>
        <img src="${dish.image}" alt="${dish.name}" ${imageClass} data-index="${index}">
        <strong>${dish.name}</strong>
        <span>${dish.price} –≥—Ä–Ω</span>
      </label>
    `;

    li.querySelector('input').addEventListener('change', (e) => {
      if (e.target.checked) {
        selectedIndexes.add(index);
    
        // ‚ú® –ê–Ω—ñ–º–∞—Ü—ñ—è –∫–ª–∞—Å—É
        li.classList.add('added');
        setTimeout(() => li.classList.remove('added'), 400);
    
        // üõí –ê–Ω—ñ–º–∞—Ü—ñ—è –ø–æ–ª—å–æ—Ç—É –¥–æ –∫–æ—à–∏–∫–∞
        flyToCart(li.querySelector('img'));
    
      } else {
        selectedIndexes.delete(index);
      }
      updateFloatingCart();
    });

    li.querySelector('img').addEventListener('click', () => showModal(dish));
    categories[dish.category].appendChild(li);
  });
   setupFadeInOnScroll();
  updateFloatingCart(); 
}

function calculateTotal() {
  let total = 0;
  selectedIndexes.forEach(index => (total += dishes[index].price));
  document.getElementById('total-price').textContent = `–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: ${total} –≥—Ä–Ω`;
  updateFloatingCart();
}

function updateFloatingCart() {
  const cart = document.querySelector('.floating-cart');
  if (!cart) return; 

  const total = [...selectedIndexes].reduce((sum, i) => sum + dishes[i].price, 0);
  localStorage.setItem('selectedIndexes', JSON.stringify([...selectedIndexes]));
  cart.style.display = 'block';
cart.textContent = total > 0 ? `üßæ ${total} –≥—Ä–Ω` : 'üßæ –ü–æ–∫–∞–∑–∞—Ç–∏ —á–µ–∫';
}

function setupActiveCategoryHighlight() {
  const sections = document.querySelectorAll('section');
  const navLinks = document.querySelectorAll('.category-nav a');
  const observer = new IntersectionObserver(
    entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          navLinks.forEach(link => link.classList.remove('active'));
          const id = entry.target.getAttribute('id');
          const activeLink = document.querySelector(`.category-nav a[href="#${id}"]`);
          if (activeLink) activeLink.classList.add('active');
        }
      });
    },
    { rootMargin: '-50% 0px -50% 0px', threshold: 0.1 }
  );
  sections.forEach(section => observer.observe(section));
}

function setupFadeInOnScroll() {
  const observer = new IntersectionObserver(
    entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          observer.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.2 }
  );
  document.querySelectorAll('.dish-list li').forEach(el => observer.observe(el));
}

function showModal(dish) {
  const modal = document.createElement('div');
  modal.className = 'dish-modal';
  modal.innerHTML = `
    <div class="dish-modal-content">
      <span class="dish-modal-close">&times;</span>
      <img src="${dish.image}" alt="${dish.name}">
      <h3>${dish.name}</h3>
      <p><strong>–Ü–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç–∏:</strong> ${dish.ingredients || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
      <p><strong>–û–ø–∏—Å:</strong> ${dish.description || '–ù–µ–º–∞—î –æ–ø–∏—Å—É'}</p>
    </div>
  `;
  document.body.appendChild(modal);
  modal.querySelector('.dish-modal-close').onclick = () => modal.remove();
  modal.onclick = (e) => {
    if (e.target === modal) modal.remove();
  };
}

  function handlePayment() {
  const dishModal = document.querySelector('.dish-modal');
  if (dishModal) dishModal.remove();

  const existingMsg = document.querySelector('.payment-success');
  if (existingMsg) existingMsg.remove();

 const sound = document.getElementById('payment-sound');
if (sound) {
  sound.pause(); 
  sound.currentTime = 0;
  const playPromise = sound.play();
  if (playPromise !== undefined) {
    playPromise
      .then(() => console.log(" –ó–≤—É–∫ –≤—ñ–¥—Ç–≤–æ—Ä–µ–Ω–æ"))
      .catch(error => console.warn(" –ó–≤—É–∫ –Ω–µ –≤—ñ–¥—Ç–≤–æ—Ä–∏–≤—Å—è:", error));
  }
}

  const msg = document.createElement('div');
  msg.className = 'payment-success';
  msg.textContent = '–î—è–∫—É—î–º–æ –∑–∞ –æ–ø–ª–∞—Ç—É!';
  document.body.appendChild(msg);


    
    setTimeout(() => {
      msg.remove();
      selectedIndexes.clear();
      localStorage.removeItem('selectedIndexes');
      updateFloatingCart();
      renderDishes();
      setupFadeInOnScroll();
    }, 3000);
  }

function showFullCart() {
  const modal = document.createElement('div');
  modal.className = 'dish-modal';

  let content = `
    <div class="dish-modal-content">
      <span class="dish-modal-close">&times;</span>
      <h3 style="color: #FF512F; text-align: center;">–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
  `;

  if (selectedIndexes.size === 0) {
    content += `<p style="text-align: center;">–í–∏ —â–µ –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏–±—Ä–∞–ª–∏ üçΩÔ∏è</p>`;
  } else {
    let total = 0;
    content += '<ul>';
    selectedIndexes.forEach(index => {
      const dish = dishes[index];
      total += dish.price;
      content += `
        <li style="display: flex; align-items: center; justify-content: space-between; margin-bottom: 12px; padding-bottom: 10px; border-bottom: 1px dashed #ccc;">
          <div style="display: flex; align-items: center;">
            <img src="${dish.image}" alt="${dish.name}" class="mini-preview">
            <div>
              <strong>${dish.name}</strong><br>
              <span style="font-size:14px; color:#777;">${dish.price} –≥—Ä–Ω</span>
            </div>
          </div>
          <button class="remove-btn" data-index="${index}" style="
            background: none;
            border: none;
            color: #f45b2a;
            font-size: 18px;
            cursor: pointer;
            padding: 0 6px;
          " title="–í–∏–¥–∞–ª–∏—Ç–∏">üóëÔ∏è</button>
        </li>
      `;
    });
    content += '</ul>';
    content += `<p style="margin-top: 16px; font-weight: bold; text-align: center;">–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${total} –≥—Ä–Ω</p>`;
    content += `
      <div style="margin-top: 20px; display: flex; justify-content: center;">
        <button class="pay-btn" onclick="handlePayment()" style="
          background: linear-gradient(90deg, #ff7043, #d972ff);
          color: white;
          padding: 10px 24px;
          font-size: 16px;
          border-radius: 14px;
          border: none;
          cursor: pointer;
          font-weight: 500;
          transition: background 0.3s ease;
          box-shadow: 0 4px 10px rgba(0,0,0,0.1);
        ">
          –û–ø–ª–∞—Ç–∏—Ç–∏
        </button>
      </div>
    `;
  }

  content += `</div>`;
  modal.innerHTML = content;
  document.body.appendChild(modal);

  modal.querySelector('.dish-modal-close').onclick = () => modal.remove();
  modal.onclick = (e) => {
    if (e.target === modal) modal.remove();
  };

  // üóë –û–±—Ä–æ–±–∫–∞ –∫–Ω–æ–ø–æ–∫ "–í–∏–¥–∞–ª–∏—Ç–∏"
  modal.querySelectorAll('.remove-btn').forEach(btn => {
    btn.addEventListener('click', (e) => {
      const index = parseInt(e.currentTarget.dataset.index);
      selectedIndexes.delete(index);
      modal.remove();
      showFullCart();
      updateFloatingCart();
      renderDishes();
    });
  });
}




function openSidebarWithAnimation() {
  const sidebar = document.querySelector('.category-nav');
  const content = document.querySelector('.content');
  const overlay = document.getElementById('overlay');

  
  sidebar.classList.add('opening');

 
  sidebar.addEventListener('transitionend', function handler(e) {
    if (e.propertyName === 'transform') {
      sidebar.classList.remove('opening');
      sidebar.classList.remove('collapsed');
      sidebar.removeEventListener('transitionend', handler);
    }
  });

  content.classList.remove('expanded');
  overlay.classList.add('active');
}

const TRANSITION_DURATION = 400; 

function toggleSidebar() {
  const sidebar = document.querySelector('.category-nav');
  const content = document.querySelector('.content');
  const overlay = document.getElementById('overlay');

  if (sidebar.classList.contains('collapsed')) {
    //  –ü–ª–∞–≤–Ω–µ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è:
    sidebar.classList.remove('collapsed');
    sidebar.classList.add('opening');
    content.classList.remove('expanded');
    overlay.classList.add('active');

   
    setTimeout(() => {
      sidebar.classList.remove('opening');
    }, 400);
  } else {
    //  –ü–ª–∞–≤–Ω–µ –∑–∞–∫—Ä–∏—Ç—Ç—è:
    sidebar.classList.add('collapsed');
    content.classList.add('expanded');
    overlay.classList.remove('active');
  }
}

function flyToCart(imgElement) {
  const cart = document.querySelector('.floating-cart');
  if (!cart) return;

  const imgRect = imgElement.getBoundingClientRect();
  const cartRect = cart.getBoundingClientRect();

  const clone = imgElement.cloneNode(true);
  clone.classList.add('fly-image');
  clone.style.top = `${imgRect.top}px`;
  clone.style.left = `${imgRect.left}px`;

  document.body.appendChild(clone);

  requestAnimationFrame(() => {
    clone.style.transform = `translate(${cartRect.left - imgRect.left}px, ${cartRect.top - imgRect.top}px) scale(0.3)`;
    clone.style.opacity = '0';
  });

  setTimeout(() => clone.remove(), 800);
}

window.addEventListener('DOMContentLoaded', () => {
  renderDishes(); 
  setupActiveCategoryHighlight();
  setupFadeInOnScroll();
  updateFloatingCart(); 


  //  –ü–æ–¥—ñ—ó –Ω–∞ —ñ–∫–æ–Ω–∫—É –º–µ–Ω—é —Ç–∞ –æ–≤–µ—Ä–ª–µ–π
  const menuToggle = document.querySelector('.menu-toggle');
  const overlay = document.getElementById('overlay');
  const links = document.querySelectorAll('.category-nav a');

  if (menuToggle) menuToggle.addEventListener('click', toggleSidebar);
  if (overlay) overlay.addEventListener('click', toggleSidebar);

  //  –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—Ä–∏ –∫–ª—ñ–∫—É –Ω–∞ –ø—É–Ω–∫—Ç –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
  links.forEach(link => {
    link.addEventListener('click', () => {
      const sidebar = document.querySelector('.category-nav');
      if (!sidebar.classList.contains('collapsed')) toggleSidebar();
    });
  });
});

